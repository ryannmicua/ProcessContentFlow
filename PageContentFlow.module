<?php

class PageContentFlow extends WireData implements Module{

   protected $id;
   protected $page;
   protected $user;
   protected $isPost = false;
   protected $cfRootPage;
   protected $cfMainModule;
   protected $stop = false;

   public static function getModuleInfo() {
      return array(
         'title' => 'Content Flow Tab', 
         'version' => 1, 
         'summary' => 'Adds a Publish Workflow Tab on pages.',
         'singular' => true, 
         'autoload' => true,
         'requires' => array('ProcessContentFlow')
      );
   }


   public function init(){
      if(isset($_POST['id'])) $this->id = (int) $_POST['id']; 
         else if(isset($_GET['id'])) $this->id = (int) $_GET['id']; 

      if(!$this->id){
         $this->stop = true;
         return;
      }

      $this->user = $this->user;
      $this->page = $this->pages->get($this->id);
      if($this->page instanceof NullPage){ $this->stop = true; return; }

      // determine if we're going to be dealing with a save/post request
      $this->isPost = ($this->input->post->id > 0 && (((int) $this->input->post->id) === $this->page->id)) || $this->config->ajax && (count($_POST) || isset($_SERVER['HTTP_X_FIELDNAME'])); 
   
   }

   public function ready(){

      if($this->stop) return;

      $this->cfMainModule = $this->modules->get('ProcessContentFlow');

      $this->cfRootPage = $this->pages->get($this->cfMainModule->root_page_id);

      if($this->cfRootPage instanceOf NullPage){
         $this->error('Could not load Content Flow base page.');
         $this->stop = true;
         return;
      }

      //don't run code below if we have a post request
      if($this->isPost) return;

      //check if this page should have a workflow tab 
      if(($this->cfRootPage->templates_with_workflow)){
         foreach($this->cfRootPage->templates_with_workflow as $temp){
            if($temp->id == $this->page->template->id){
               $this->addHookAfter('ProcessPageEdit::buildForm', $this, 'hookPageBuildForm'); 
               break;
            }
         }
      }
      
   }

   protected function ___buildFormWorkFlowTab(){
      $modules = $this->modules;

      $wrapper = new InputfieldWrapper();
      $wrapper->attr('id', __CLASS__ . 'WorkFlow');
      $wrapper->attr('title', $this->_('Publishing Workflow'));

      $statusField = $modules->get('InputfieldSelect');
      $statusField->label = $this->_('Status');
      $statusField->attr('id+name', 'cfstatus');
      $statusField->attr('value', $this->page->cfstatus);
      //$statusField->required = true;
      
      $statuses = array('Pitch', 'Assigned', 'In Progress', 'Draft', 'Pending Review');
      foreach($statuses as $status){
         $statusField->addOption($status,$status);
      }
      $wrapper->append($statusField);

      $field = $modules->get('InputfieldMarkup');
      $field->label = $this->_('Workflow here');
      $field->attr('value', '<h4>This will be where workflow settings will go</h4>'.$this->page->name);

      $wrapper->append($field);
      return $wrapper;
   }

   /**
    * ======================================
    * HOOKS GO BELOW
    * ======================================
    */


   public function hookPageBuildForm(HookEvent $event){
      $form = $event->return;

      //get the 'Content' tab input field wrapper so we can append our tab after this
      $contentTab = $form->children('id=ProcessPageEditContent')->first();

      if($contentTab->id){
         $event->return = $form->insertAfter($this->buildFormWorkFlowTab(), $contentTab);
      } else {
         $event->return = $form->append($this->buildFormWorkFlowTab());
      }

      $field = $this->modules->get('InputfieldSubmit');
      $field->attr('id+name', 'preview'); 
      $field->attr('class', $field->class); 
      $field->attr('value', 'Previewer'); 

      $event->return = $form->append($field); 

   }

}